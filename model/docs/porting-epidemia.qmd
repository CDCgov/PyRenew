---
title: "Porting An Existing Model (Epidemia) To MSR"
format: gfm
engine: jupyter
---

## Introduction

One aim of the Multisignal Signal Renewal (hereafter referred to as MSR[^msr_v_pyrenew]) project is to make statistical inference and simulation (mostly within the context of infectious disease modeling) more flexible.

[^msr_v_pyrenew]: The author of this tutorial prefers the use of MSR to `pyrenew`, which the reader may have seen in other MSR tutorials.

With flexible infectious disease model tooling, one might expect to be able to re-implement existing, external infectious disease models. Such capabilities are possible with MSR.

In this walk-through, we will demonstrate how to re-implement a model created for influenza forecasting (hereafter referred to as `cfaepim`) using the [Epidemia](https://github.com/CDCgov/multisignal-epi-inference) framework.

If you have not already seen MSR in use, please reference some of other tutorials:

* [Getting Started](https://cdcgov.github.io/multisignal-epi-inference/tutorials/getting-started.html)
* [Extending Pyrenew](https://cdcgov.github.io/multisignal-epi-inference/tutorials/extending_pyrenew.html)
* [Pyrenew Demo](https://cdcgov.github.io/multisignal-epi-inference/tutorials/pyrenew_demo.html)


## Libraries And Data

```python
import matplotlib as mpl
import matplotlib.pyplot as plt
import jax
import jax.numpy as jnp
import numpy as np
from numpyro.handlers import seed
import numpyro.distributions as dist

from pyrenew.process import SimpleRandomWalkProcess
```

## An Epidemia Model For Influenza

The `cfaepim` model is private within the CDC organization. Nonetheless, there are code snippets that the author has permission to share for the sake of this tutorial.

Suppose we have

```r
build_light_rt <- function(
    rt_intercept_prior_mode,
    rt_intercept_prior_scale,
    max_rt,
    rw_prior_scale
) {
    rt_model <- epidemia::epirt(
      formula = as.formula(
        sprintf(
          paste0(
            "R(location, date) ~ 1 + ",
            "rw(time = week, gr = location, prior_scale = %f)"
          ),
          rw_prior_scale
        )
      ),
      prior_intercept = rstanarm::normal(
        location = rt_intercept_prior_mode,
        scale = rt_intercept_prior_scale
      ),
      link = epidemia::scaled_logit(K = max_rt)
    )
    return(rt_model)}
```

## MSR Re-Implementation

## Model Validation And Comparison

## Resources

* [Epidemia's Website](https://imperialcollegelondon.github.io/epidemia/index.html)
* [Epidemia Model Description Page](https://imperialcollegelondon.github.io/epidemia/articles/model-description.html)
* [Epidemia Model Schematic Page](https://imperialcollegelondon.github.io/epidemia/articles/model-schematic.html)
* [Epidemia Model Implementation Page](https://imperialcollegelondon.github.io/epidemia/articles/model-implementation.html)
